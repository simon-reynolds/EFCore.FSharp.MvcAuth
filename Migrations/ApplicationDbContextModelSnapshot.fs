// <auto-generated />
namespace EFCore.FSharp.AuthMvc.Migrations

open System
open EFCore.FSharp.AuthMvc.Data
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<ApplicationDbContext>)>]
type ApplicationDbContextModelSnapshot() =
    inherit ModelSnapshot()

    override this.BuildModel(modelBuilder: ModelBuilder) =
        modelBuilder

            .UseIdentityColumns().HasAnnotation("Relational:MaxIdentifierLength", 128)
            .HasAnnotation("ProductVersion", "5.0.3")
            |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("nvarchar(450)") |> ignore
            b.Property<string>("ConcurrencyStamp")
                .IsConcurrencyToken()
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("Name")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore
            b.Property<string>("NormalizedName")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("NormalizedName")
                .IsUnique()
                .HasDatabaseName("RoleNameIndex")
                .HasFilter("[NormalizedName] IS NOT NULL") |> ignore

            b.ToTable("AspNetRoles") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", (fun b ->

            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .UseIdentityColumn() |> ignore
            b.Property<string>("ClaimType")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("ClaimValue")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("RoleId")
                .IsRequired()
                .HasColumnType("nvarchar(450)") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("RoleId") |> ignore

            b.ToTable("AspNetRoleClaims") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", (fun b ->

            b.Property<string>("Id")
                .HasColumnType("nvarchar(450)") |> ignore
            b.Property<int>("AccessFailedCount")
                .IsRequired()
                .HasColumnType("int") |> ignore
            b.Property<string>("ConcurrencyStamp")
                .IsConcurrencyToken()
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("Email")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore
            b.Property<bool>("EmailConfirmed")
                .IsRequired()
                .HasColumnType("bit") |> ignore
            b.Property<bool>("LockoutEnabled")
                .IsRequired()
                .HasColumnType("bit") |> ignore
            b.Property<Nullable<DateTimeOffset>>("LockoutEnd")
                .HasColumnType("datetimeoffset") |> ignore
            b.Property<string>("NormalizedEmail")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore
            b.Property<string>("NormalizedUserName")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore
            b.Property<string>("PasswordHash")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("PhoneNumber")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<bool>("PhoneNumberConfirmed")
                .IsRequired()
                .HasColumnType("bit") |> ignore
            b.Property<string>("SecurityStamp")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<bool>("TwoFactorEnabled")
                .IsRequired()
                .HasColumnType("bit") |> ignore
            b.Property<string>("UserName")
                .HasMaxLength(256)
                .HasColumnType("nvarchar(256)") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("NormalizedEmail")
                .HasDatabaseName("EmailIndex") |> ignore


            b.HasIndex("NormalizedUserName")
                .IsUnique()
                .HasDatabaseName("UserNameIndex")
                .HasFilter("[NormalizedUserName] IS NOT NULL") |> ignore

            b.ToTable("AspNetUsers") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", (fun b ->

            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int")
                .UseIdentityColumn() |> ignore
            b.Property<string>("ClaimType")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("ClaimValue")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("UserId")
                .IsRequired()
                .HasColumnType("nvarchar(450)") |> ignore

            b.HasKey("Id") |> ignore


            b.HasIndex("UserId") |> ignore

            b.ToTable("AspNetUserClaims") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", (fun b ->

            b.Property<string>("LoginProvider")
                .HasMaxLength(128)
                .HasColumnType("nvarchar(128)") |> ignore
            b.Property<string>("ProviderKey")
                .HasMaxLength(128)
                .HasColumnType("nvarchar(128)") |> ignore
            b.Property<string>("ProviderDisplayName")
                .HasColumnType("nvarchar(max)") |> ignore
            b.Property<string>("UserId")
                .IsRequired()
                .HasColumnType("nvarchar(450)") |> ignore

            b.HasKey("LoginProvider", "ProviderKey") |> ignore


            b.HasIndex("UserId") |> ignore

            b.ToTable("AspNetUserLogins") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", (fun b ->

            b.Property<string>("UserId")
                .HasColumnType("nvarchar(450)") |> ignore
            b.Property<string>("RoleId")
                .HasColumnType("nvarchar(450)") |> ignore

            b.HasKey("UserId", "RoleId") |> ignore


            b.HasIndex("RoleId") |> ignore

            b.ToTable("AspNetUserRoles") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", (fun b ->

            b.Property<string>("UserId")
                .HasColumnType("nvarchar(450)") |> ignore
            b.Property<string>("LoginProvider")
                .HasMaxLength(128)
                .HasColumnType("nvarchar(128)") |> ignore
            b.Property<string>("Name")
                .HasMaxLength(128)
                .HasColumnType("nvarchar(128)") |> ignore
            b.Property<string>("Value")
                .HasColumnType("nvarchar(max)") |> ignore

            b.HasKey("UserId", "LoginProvider", "Name") |> ignore

            b.ToTable("AspNetUserTokens") |> ignore

        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", (fun b ->
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole",null)
                .WithMany()
                .HasForeignKey("RoleId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", (fun b ->
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser",null)
                .WithMany()
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", (fun b ->
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser",null)
                .WithMany()
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", (fun b ->
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole",null)
                .WithMany()
                .HasForeignKey("RoleId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser",null)
                .WithMany()
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

        modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", (fun b ->
            b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser",null)
                .WithMany()
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

